<?php
/**
 * Implements hook_theme().
 */
function contador_theme( $existing, $type, $theme, $path )
{
    $hooks = array();
    $hooks[ 'contador' ] = array(
        'variables' => array( 'data' => array() ),
        'template'  => "templates/contador"
    );

    $hooks[ 'depurar' ] = array(
        'variables' => array( 'data' => array() ),
        'template'  => "templates/depurar"
    );
    return $hooks;
}

/**
 * Implements hook_block_info().
 */
function contador_block_info()
{
    $blocks = array();
    $blocks[ 'contador' ] = array(
        'info'  => t( 'Cuenta Regresiva Proxima Fecha' ),
        'cache' => DRUPAL_NO_CACHE,
    );
    $blocks[ 'depurar_equipos' ] = array(
        'info'  => t( 'Depurador de equipos y alineaciones' ),
        'cache' => DRUPAL_NO_CACHE,
    );

    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function contador_block_view( $delta = '' )
{
    $block = array();
    switch ( $delta )
    {
        case 'contador':
            $block[ 'content' ] = theme( 'contador', array( 'data' => contador_data() ) );
            break;
        case 'depurar_equipos':
            $block[ 'content' ] = theme( 'depurar', array( 'data' => depurar_data() ) );
            break;
    }

    return $block;
}

function depurar_data(){
    $data = array();
    $query = new EntityFieldQuery();
    $result = $query->entityCondition( 'entity_type', 'node' )
        ->entityCondition( 'bundle', 'equipo_de_usuario' )
        ->propertyCondition( 'status', 1 )
        ->execute();
    if ( isset( $result[ 'node' ] ) ){
        $nids = array_keys( $result[ 'node' ] );
        $equipos = entity_load( 'node', $nids );
        foreach ( $equipos as $equipo ){
            if(isset($equipo->field_jugadores2['und'])){
                $players = 0;
                $players2 = 0;
                $total = 0;
                $us = user_load($equipo->uid);
                foreach($equipo->field_jugadores2['und'] as $key=>$jugador){
                    if($player = node_load($jugador['target_id'])){
                        //$data[$equipo->nid][] = $jugador['target_id'];
                        //$data[$equipo->nid][$jugador] = $player;
                        $players++;
                        $total += $player->field_precio['und'][0]['value'];
                    } else {
                        $data[$us->uid] = $us->mail;
                        //$data[$equipo->uid][$jugador['target_id']] = "Jugador No existe";
                        $players2++;
                        $equipo->field_jugadores2['und'][$key]['target_id'] = 0;
                        unset($equipo->field_jugadores2['und'][$key]);
                        node_save($equipo);
                    }
                }

                if(isset($us->field_saldo['und'][0]['value'])){
                    $saldo = $us->field_saldo['und'][0]['value'];
                    if($total > 500000000){
                        foreach($equipo->field_jugadores2['und'] as $key=>$jugador){
                            $equipo->field_jugadores2['und'][$key]['target_id'] = 0;
                            unset($equipo->field_jugadores2['und'][$key]);
                        }
                        node_save($equipo);
                        $us->field_saldo['und'][0]['value'] = 500000000;
                        user_save($us);
                        $result = $query->entityCondition( 'entity_type', 'node' )
                            ->entityCondition( 'bundle', 'alineacion' )
                            ->propertyCondition( 'status', 1 )
                            ->propertyCondition('uid',$us->uid,"=")
                            ->execute();
                        if ( isset( $result[ 'node' ] ) ){
                            $nids = array_keys( $result[ 'node' ] );
                            node_delete_multiple($nids);
                        }
                        $data[] = $us->mail;
                        //$data[$equipo->uid]["mail"] = $us->mail;
                        //$data[$equipo->uid]["name"] = $us->name;
                        //$data[$equipo->uid]["equipo"] = $total;
                        //$data[$equipo->uid]["saldo"] = $saldo;
                        //$data[$equipo->uid]["total"] = number_format($saldo+$total,0,",",".");
                    } else if($total+$saldo > 500000000){
                        //$us->field_saldo['und'][0]['value'] = 500000000-$total;
                        //user_save($us);
                        $data[$equipo->uid]["mail"] = $us->mail;
                        $data[$equipo->uid]["name"] = $us->name;
                        $data[$equipo->uid]["equipo"] = $total;
                        $data[$equipo->uid]["saldo"] = $saldo;
                        $data[$equipo->uid]["total"] = number_format($saldo+$total,0,",",".");
                    }
                }
            }
        }
    }

    $result = $query->entityCondition( 'entity_type', 'node' )
        ->entityCondition( 'bundle', 'alineacion' )
        ->propertyCondition( 'status', 1 )
        ->execute();
    if ( isset( $result[ 'node' ] ) ){
        $nids = array_keys( $result[ 'node' ] );
        $alineaciones = entity_load( 'node', $nids );
        foreach ( $alineaciones as $ali ){
            //$data[] = $ali;
            for($i=1;$i<=11;$i++){
                if ( isset($ali->{"field_jugador".$i}['und'])
                    && isset($ali->{"field_jugador".$i}['und'][0]['target_id'])
                    && $ali->{"field_jugador".$i}['und'][0]['target_id'] > 0
                ) {
                    if($player = node_load($ali->{"field_jugador".$i}['und'][0]['target_id'])){
            //            ;
                    } else {
                        $ali->{"field_jugador".$i}['und'][0]['target_id'] = 0;
                        $us = user_load($ali->uid);
                        //$data[$us->uid] = $us->mail;
                        node_save($ali);
                    }
                }
            }
        }

    }
    return $data;
}

/**
 * @return timestamp
 */
function contador_data()
{
    $data = array();
    $data[ "date" ] = date( "Y-m-d H:i:s", time() + 60 * 60 );
    $data[ "name" ] = "Sin Fecha";
    $query = new EntityFieldQuery();
    $result = $query->entityCondition( 'entity_type', 'node' )
        ->entityCondition( 'bundle', 'fecha_del_torneo' )
        ->propertyCondition( 'status', 1 )
        ->fieldOrderBy( 'field_inicio', 'value', 'ASC' )
        ->execute();
    if ( isset( $result[ 'node' ] ) )
    {
        $nids = array_keys( $result[ 'node' ] );
        $fechas = entity_load( 'node', $nids );
        $now = date( "Y-m-d H:i:s" );
        foreach ( $fechas as $fecha )
        {
            if ( $fecha->field_inicio[ 'und' ][ 0 ][ 'value' ] > $now )
            {
                $data[ "date" ] = $fecha->field_inicio[ 'und' ][ 0 ][ 'value' ];
                $data[ "name" ] = $fecha->title;
                $fecha->field_fecha_abierta[ 'und' ][ 0 ][ 'value' ] = 1;
                node_save( $fecha );
                $_SESSION[ 'fecha_activa' ] = $fecha;
                break;
            } else
            {
                $fecha->field_fecha_abierta[ 'und' ][ 0 ][ 'value' ] = 0;
                node_save( $fecha );
            }
        }
    }
    $path = drupal_get_path( 'module', 'contador' );
    drupal_add_js( $path . '/js/jquery.mb-comingsoon.min.js' );

    return $data;
}
